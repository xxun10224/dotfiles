# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu rofi -show run | xargs swaymsg exec --

mouse_warping container
focus_follows_mouse always

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg ~/Pictures/wallpapers/dark-cat-rosewater.png fill
#
# Example configuration:
#
  output eDP-1 {
    resolution 1920x1080
    position 0,0
  }
  # output HDMI-A-1 {
  #   resolution 1920x1080
  #   position 1920,0
  # }


# default display outputs for workspaces with fallback to disp1
    set $disp1 "eDP-1"
    set $disp2 "HDMI-A-1"
    workspace 0 output $disp2 
    workspace 1 output $disp2 
    workspace 2 output $disp2 
    workspace 3 output $disp2 
    workspace 4 output $disp2 
    workspace 5 output $disp2 
    workspace 6 output $disp1 
    workspace 7 output $disp1 
    workspace 8 output $disp1 
    workspace 9 output $disp1
    workspace 10 output $disp1
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec_always killall hypridle; hypridle
exec swayidle -dw > ~/logs/swayidle.log 2>&1
exec_always killall swayidle; swayidle -dw > ~/logs/swayidle.log 2>&1
exec wayland-pipewire-idle-inhibit
exec_always killall wayland-pipewire-idle-inhibit; wayland-pipewire-idle-inhibit
# exec swayidle -w \
#          timeout 150 'brightnessctl -s set 10' resume 'brightnessctl -r' \
#          timeout 240 'swaylock' \
#          timeout 300 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock' \
#          after-resume 'pidof tty-clock || kitty +kitten panel --edge=background --output-name=eDP-1 -o background_opacity=0 -o font_size=20 tty-clock -c -C 7 -f "%a %m/%d"'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:touchpad {
    tap enabled
    natural_scroll enabled
    tap enabled
    tap_button_map lrm
    drag_lock disabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    # bindsym $mod+Shift+q kill
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec swaymsg exit
    bindsym Scroll_Lock exec swaylock
    # bindsym Scroll_lock exec hyprlock
    bindsym Shift+Scroll_Lock exec systemctl suspend
#
# screenshots
#
bindsym $mod+i exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy
bindsym Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | tee ~/Pictures/Screenshots/$(date +%s).png | wl-copy

bindsym $mod+Shift+i exec grim -g "$(slurp -w 0)" - | wl-copy
bindsym Shift+Print exec grim -g "$(slurp -w 0)" - | tee ~/Pictures/Screenshots/$(date +%s).png | wl-copy

# bindsym $mod+Alt+i exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy
bindsym $mod+Alt+i exec swaymsg -t get_tree | jq -r '.. | select(.focused? and .pid?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | grim -g - - | wl-copy
bindsym Alt+Print exec swaymsg -t get_tree | jq -r '.. | select(.focused? and .pid?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | grim -g - - | tee ~/Pictures/Screenshots/$(date +%s).png | wl-copy
#
# volume
#
bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym Pause exec playerctl play-pause
#
# brightness
#
bindsym XF86MonBrightnessUp exec brightnessctl set 10%+
bindsym XF86MonBrightnessDown exec brightnessctl set 10%-

#
# apps
#
bindsym $mod+b exec kitty --app-id bluetui ~/github/bluetui/target/release/bluetui
bindsym $mod+Shift+b exec kitty --app-id battop ~/github/rust-battop/target/release/battop
bindsym $mod+Semicolon exec kitty --app-id pulsemixer ~/github/pulsemixer/pulsemixer
bindsym $mod+space exec kitty --app-id btop ~/github/btop/bin/btop
bindsym $mod+Shift+space exec kitty --app-id htop htop
bindsym $mod+t exec Telegram
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+grave workspace number 0
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindgesture swipe:4:right workspace prev
    bindgesture swipe:4:left workspace next
    bindsym --whole-window {
        $mod+button4 workspace next
        $mod+button5 workspace prev
    }

    # Move focused container to workspace
    bindsym $mod+Shift+grave move container to workspace number 0; workspace number 0
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    exec autotiling-rs
    exec_always killall autotiling-rs; autotiling-rs
    # bindsym $mod+b splith
    # bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    # bindsym $mod+w layout tabbed
    # bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+v floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    # bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }
# exec waybar

default_border none
default_floating_border none
# font pango:monospace 0
titlebar_padding 1
titlebar_border_thickness 0

include /etc/sway/config.d/*
exec dunst & fcitx5 & blueman-applet
exec_always killall dunst fcitx5 blueman-applet; dunst & fcitx5 & blueman-applet
seat * hide_cursor 5000
for_window [title="Meeting" app_id="Zoom Workplace"] inhibit_idle visible
for_window [app_id="pulsemixer"] floating enable, move position center, resize set 1728 972, opacity 0.9
for_window [app_id="bluetui"] floating enable, move position center, resize set 1728 972, opacity 0.9
for_window [app_id="battop"] floating enable, move position center, resize set 1728 972, opacity 0.9
for_window [app_id="btop"] floating enable, move position center, resize set 1728 972, opacity 0.9
for_window [app_id="htop"] floating enable, move position center, resize set 1728 972, opacity 0.9
